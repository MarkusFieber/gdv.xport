<!-- 
	If you are behind a proxy try the following command:
		'mvn -Dhttp.proxyHost=164.22.255.145 -Dhttp.proxyPort=8181 -U validate'
	or create in ${user.home}/.m2/repository a file "settings.xml"
	with this proxy setting.
 -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.oboehm</groupId>
  <artifactId>gdv-xport</artifactId>
  <packaging>jar</packaging>
  <version>2.1.1</version>
  <name>GDV-Xport</name>
  <url>http://www.aosd.de/gdv.xport/</url>
  <organization>
    <name>AOSD Labs</name>
    <url>http://www.aosd.de/</url>
  </organization>
  <!-- see http://maven.apache.org/pom.html#Licenses -->
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>



  <properties>

    <patterntesting.version>1.7.0</patterntesting.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.7</java.version>

    <!-- workaround for PMD, see http://jira.codehaus.org/browse/MPMD-86 -->
    <targetJdk>1.7</targetJdk>
    <main.class>gdv.xport.Main</main.class>

    <!-- Sonar -->
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

    <!-- Sonar 4.x Violations Filter -->
    <!-- System.out and System.err should not be used as loggers -->
    <sonar.issue.ignore.multicriteria.1.ruleKey>squid:S106</sonar.issue.ignore.multicriteria.1.ruleKey>
    <sonar.issue.ignore.multicriteria.1.resourceKey>**</sonar.issue.ignore.multicriteria.1.resourceKey>
    <!-- System.exit(...) and Runtime.getRuntime().exit(...) should not be called -->
    <sonar.issue.ignore.multicriteria.2.ruleKey>squid:S1147</sonar.issue.ignore.multicriteria.2.ruleKey>
    <sonar.issue.ignore.multicriteria.2.resourceKey>**/Main.java</sonar.issue.ignore.multicriteria.2.resourceKey>
    <!-- String literals should not be duplicated -->
    <sonar.issue.ignore.multicriteria.3.ruleKey>squid:S1192</sonar.issue.ignore.multicriteria.3.ruleKey>
    <sonar.issue.ignore.multicriteria.3.resourceKey>**</sonar.issue.ignore.multicriteria.3.resourceKey>
    <!-- super.clone() should be called when overriding Object.clone() -->
    <sonar.issue.ignore.multicriteria.4.ruleKey>squid:S1182</sonar.issue.ignore.multicriteria.4.ruleKey>
    <sonar.issue.ignore.multicriteria.4.resourceKey>**/feld/*.java</sonar.issue.ignore.multicriteria.4.resourceKey>
    <!-- Subclasses that add fields should override "equals" -->
    <sonar.issue.ignore.multicriteria.2160.ruleKey>squid:S2160</sonar.issue.ignore.multicriteria.2160.ruleKey>
    <sonar.issue.ignore.multicriteria.2160.resourceKey>src/main/java/gdv/xport/**/*satz*.java</sonar.issue.ignore.multicriteria.2160.resourceKey>
    <!-- ignore violations -->
    <sonar.issue.ignore.multicriteria>1,2,3,4,2160</sonar.issue.ignore.multicriteria>

  </properties>



  <build>
    
    <!-- 
        Dependency management for plugins which are used in different places
        in the POM.
     -->
    <pluginManagement>
      <plugins>
        <plugin>
	      <groupId>org.codehaus.mojo</groupId>
	      <artifactId>findbugs-maven-plugin</artifactId>
	      <version>3.0.3</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <versionRange>[0.7.0.201403182114,)</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
  
  	<plugins>
  	
      <!-- 
          Make The Jar Executable
          see http://maven.apache.org/shared/maven-archiver/examples/classpath.html
       -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${main.class}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>uberjar</shadedClassifierName>
              <minimizeJar>true</minimizeJar>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${main.class}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
          Maven Site Plugin
          call 'mvn site:site' to generate web site
          see http://maven.apache.org/plugins/maven-site-plugin/examples/creating-content.html
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.4</version>
        <configuration>
          <locales>de</locales>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>

  	  <plugin>
  	  	<groupId>org.apache.maven.plugins</groupId>
  	  	<artifactId>maven-compiler-plugin</artifactId>
  	  	<version>3.1</version>
  	  	<configuration>
  	  	  <source>${java.version}</source>
  	  	  <target>${java.version}</target>
  	  	</configuration>
  	  </plugin>

      <!--
        AspectJ compiler
        @see http://www.mail-archive.com/user@mojo.codehaus.org/msg00157.html
        @see http://mail-archives.apache.org/mod_mbox/maven-users/200601.mbox/%3CB39B8F0E-BB20-44DB-96B3-3C7FCB85B594@gmail.com%3E
        @see http://mojo.codehaus.org/aspectj-maven-plugin/differentTestAndCompile.html
       -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>1.5</version>
        <configuration>
          <ajdtBuildDefFile>build.ajproperties</ajdtBuildDefFile>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>org.patterntesting</groupId>
              <artifactId>patterntesting-rt</artifactId>
            </aspectLibrary>
            <aspectLibrary>
              <groupId>org.patterntesting</groupId>
              <artifactId>patterntesting-check-ct</artifactId>
            </aspectLibrary>
            <aspectLibrary>
              <groupId>org.patterntesting</groupId>
              <artifactId>patterntesting-check-rt</artifactId>
            </aspectLibrary>
          </aspectLibraries>
        </configuration>
      </plugin>

	  <!-- we must set some system properties for testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/Abstract*.java</exclude>
          </excludes>
          <systemProperties>
            <property>
              <name>gdv.VU-Nummer</name>
              <value>4711</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      
      <!-- Sonar -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.2</version>
      </plugin>

      <!-- Code Coverage  -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.9</version>
        <configuration>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
      </plugin>

  	</plugins>
  	
  </build>




  <reporting>

    <plugins>

      <!-- Project Reports (like dependencies) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.7</version>
      </plugin>

      <!-- Java Cross Reference Listing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>

      <!--
          Changes
          see http://maven.apache.org/plugins/maven-changes-plugin/usage.html
       -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.10</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!--
          Javadoc
          see http://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
        <configuration>
          <source>${java.version}</source>
          <show>protected</show>
          <links>
            <link>http://java.sun.com/javase/6/docs/api/</link>
            <link>http://www.eclipse.org/aspectj/doc/released/runtime-api</link>
            <link>http://junit.sourceforge.net/javadoc/</link>
          </links>
        </configuration>
      </plugin>

      <!-- Unit Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.19.1</version>
      </plugin>

      <!--
          code smells
          start 'mvn pmd:pmd'
          http://maven.apache.org/plugins/maven-pmd-plugin/
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.6</version>
        <configuration>
          <sourceEncoding>utf-8</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <targetJdk>${java.version}</targetJdk>
          <rulesets>
            <ruleset>${basedir}/config/pmd.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>

      <!--
          findbugs
          start 'mvn findbugs:findbugs'
          http://mojo.codehaus.org/findbugs-maven-plugin/
          http://docs.codehaus.org/display/MAVENUSER/FindBugs+Plugin
       -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <findbugsXmlOutput>true</findbugsXmlOutput>
          <xmlOutput>true</xmlOutput>
          <threshold>Normal</threshold>
          <effort>Max</effort>
          <excludeFilterFile>config/findbugs-exclude.xml</excludeFilterFile>
          <omitVisitors>FindDeadLocalStores,OverridingEqualsNotSymmetrical</omitVisitors>
          <onlyAnalyze>gdv.xport.-</onlyAnalyze>
          <relaxed>false</relaxed>
        </configuration>
      </plugin>

    </plugins>

  </reporting>



  <dependencies>
  
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
    <groupId>commons-httpclient</groupId>
    <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>
    <!-- @see http://mirrors.ibiblio.org/pub/mirrors/maven2/junit/junit/ -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>[4.5,]</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.1</version>
    </dependency>
	<!-- PatternTesting -->
    <dependency>
      <groupId>org.patterntesting</groupId>
      <artifactId>patterntesting-rt</artifactId>
      <version>${patterntesting.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.jamonapi</groupId>
          <artifactId>jamon</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.patterntesting</groupId>
      <artifactId>patterntesting-check-ct</artifactId>
      <version>${patterntesting.version}</version>
       <exclusions>
        <exclusion>
          <groupId>com.jamonapi</groupId>
          <artifactId>jamon</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.patterntesting</groupId>
      <artifactId>patterntesting-check-rt</artifactId>
      <version>${patterntesting.version}</version>
       <exclusions>
        <exclusion>
          <groupId>com.jamonapi</groupId>
          <artifactId>jamon</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.patterntesting</groupId>
      <artifactId>patterntesting-concurrent</artifactId>
      <version>${patterntesting.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.jamonapi</groupId>
          <artifactId>jamon</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Object Validation Framework (OVal) -->
    <dependency>
      <groupId>net.sf.oval</groupId>
      <artifactId>oval</artifactId>
      <version>1.40</version>
    </dependency>

  </dependencies>
  

  
  <!-- More Project Information -->

  <description>
    gdv.xport ist eine Java-Bibliothek, die den Umgang mit dem GDV-Format erleichtert.
    Sie erleichtert den Export und Export dieses Datenformats.
  </description>

  <inceptionYear>2009</inceptionYear>

  <developers>
    <developer>
      <name>Oliver Boehm</name>
      <id>oboehm</id>
      <email>oliver.boehm@gmail.com</email>
      <organization>T-Systems</organization>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Ralf Klemmer</name>
      <id>ralfklemmer</id>
      <email>r_klemmer@gmx.de</email>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Andre Janus</name>
      <id>ajanus</id>
      <email>mail@andre-janus.de</email>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Dawid Stoewe</name>
      <id>DaStoDev</id>
      <email>david_stoewe@yahoo.de</email>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Igor Narodetskyi</name>
      <email>i.narodetskyi@autofleetcontrol.de</email>
      <roles>
        <role>Java Developer</role>
      </roles>
    </contributor>
    <contributor>
      <name>Frank Berger</name>
      <email>Frank.Berger@talanx.com</email>
      <roles>
        <role>Java Developer</role>
      </roles>
    </contributor>
  </contributors>
  
  <scm>
    <connection>scm:git:git://github.com/oboehm/gdv.xport.git</connection>
    <url>https://github.com/oboehm/gdv.xport</url>
  </scm>
  
  <issueManagement>
    <system>github</system>
    <url>https://github.com/oboehm/gdv.xport/issues</url>
  </issueManagement>
  
  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.org/oboehm/gdv.xport</url>
  </ciManagement>
  
  <mailingLists>
    <mailingList>
      <name>gdv-xport</name>
      <archive>https://groups.google.com/forum/#!forum/gdv-xport</archive>
    </mailingList>
  </mailingLists>
  
  
  
  <profiles>

    <!-- 
        for releases we have higher quality requirements
     -->
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <!-- 
              Build should fail if FindBugs reports an error
              see http://mojo.codehaus.org/findbugs-maven-plugin/examples/violationChecking.html
           -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <configuration>
              <effort>Max</effort>
              <threshold>Normal</threshold>
              <excludeFilterFile>config/findbugs-exclude.xml</excludeFilterFile>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- We want to sign the artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-install-plugin</artifactId>
            <configuration>
              <createChecksum>true</createChecksum>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-release-plugin</artifactId>
            <configuration>
              <!-- Pass these arguments to the deploy plugin. -->
              <arguments>-Prelease</arguments>
            </configuration>
          </plugin>
          <!-- see http://maven.apache.org/plugins/maven-changes-plugin/examples/changes-file-validation.html -->
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-changes-plugin</artifactId>
			<executions>
				<execution>
					<id>validate-changes</id>
					<phase>pre-site</phase>
					<goals>
						<goal>changes-validate</goal>
					</goals>
					<configuration>
						<!--
							if set to true the build will fail if the changes file is invalid,
							if set to false warnings will be logged.
						-->
						<failOnError>true</failOnError>
					</configuration>
				</execution>
			</executions>
		  </plugin>   
        </plugins>
      </build>
    </profile>
    
  </profiles>

</project>
